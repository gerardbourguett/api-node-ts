{"version":3,"file":"defaults.js","sourceRoot":"","sources":["../../src/defaults.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,QAAQ,EAAE,MAAM,SAAS,CAAC;AAkBnC,SAAS,SAAS,CAAC,KAAc;IAC7B,IAAI,OAAO,KAAK,KAAK,QAAQ,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,EAAE,CAAC;QAC7C,OAAO,KAAK,GAAG,IAAI,CAAC;IACxB,CAAC;AACL,CAAC;AAED,MAAM,OAAO,QAAQ;IACjB,YACI,GAAgB,EACP,OAAO,GAAG,CAAC,MAAM,IAAI,WAAW,EAChC,OAAO,QAAQ,CAAC,GAAG,CAAC,MAAgB,EAAE,EAAE,CAAC,IAAI,IAAI,EACjD,OAAO,GAAG,CAAC,MAAM,IAAI,QAAQ,EAAE,CAAC,QAAQ,EACxC,WAAW,GAAG,CAAC,UAAU,EACzB,WAAW,GAAG,CAAC,UAAU,EACzB,0BAA0B,MAAM,EAChC,UAAU,GAAG,CAAC,SAAS,EACvB,oBAAoB,SAAS,CAClC,QAAQ,CAAC,GAAG,CAAC,iBAA2B,EAAE,EAAE,CAAC,CAChD,EACQ,iBAAiB,GAAG,CAAC,gBAAgB;QAVrC,SAAI,GAAJ,IAAI,CAA4B;QAChC,SAAI,GAAJ,IAAI,CAA6C;QACjD,SAAI,GAAJ,IAAI,CAAoC;QACxC,aAAQ,GAAR,QAAQ,CAAiB;QACzB,aAAQ,GAAR,QAAQ,CAAiB;QACzB,4BAAuB,GAAvB,uBAAuB,CAAS;QAChC,YAAO,GAAP,OAAO,CAAgB;QACvB,sBAAiB,GAAjB,iBAAiB,CAEzB;QACQ,mBAAc,GAAd,cAAc,CAAuB;IAC/C,CAAC;CACP","sourcesContent":["import { userInfo } from 'node:os';\n\n\n/** Environment variables providing connection configuration defaults.\n *\n *  See {@link https://www.postgresql.org/docs/current/libpq-envars.html} for a detailed description.\n */\nexport interface Environment {\n    PGCLIENTENCODING: string;\n    PGCONNECT_TIMEOUT: string;\n    PGDATABASE: string;\n    PGHOST: string;\n    PGPASSWORD: string;\n    PGPORT: string;\n    PGSSLMODE: string;\n    PGUSER: string;\n}\n\nfunction secToMsec(value?: number) {\n    if (typeof value === \"number\" && !isNaN(value)) {\n        return value * 1000;\n    }\n}\n\nexport class Defaults {\n    constructor(\n        env: Environment,\n        readonly host = env.PGHOST || 'localhost',\n        readonly port = parseInt(env.PGPORT as string, 10) || 5432,\n        readonly user = env.PGUSER || userInfo().username,\n        readonly database = env.PGDATABASE,\n        readonly password = env.PGPASSWORD,\n        readonly preparedStatementPrefix = 'tsp_',\n        readonly sslMode = env.PGSSLMODE,\n        readonly connectionTimeout = secToMsec(\n            parseInt(env.PGCONNECT_TIMEOUT as string, 10)\n        ),\n        readonly clientEncoding = env.PGCLIENTENCODING,\n    ) {}\n}"]}